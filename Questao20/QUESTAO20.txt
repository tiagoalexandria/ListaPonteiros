#include <stdio.h>
#include <stdlib.h>
#include "gc.h"
#include <assert.h>
#include <time.h>

int main(void){

int i, p2;

	clock_t tempo1;
	clock_t tempo2;

	const int size = 100000;
    //comeco da marcacao
	tempo1 = clock();
        for(i = 0; i < size; i++){
            int **p1 = GC_MALLOC(sizeof(int));
			}
	tempo1 = clock() - tempo1;
		printf ("Coletor de lixo: %f s\n",((float)tempo1)/CLOCKS_PER_SEC);

    //marcacao com malloc e free
	tempo2 = clock();
    for(i = 0; i < size; i++){
        int **p2 = malloc(sizeof(int));
        free(p2);
		}
	tempo2 = clock() - tempo2;
		printf ("Malloc/free....: %f s\n",((float)tempo2)/CLOCKS_PER_SEC);
 }


//Coletor de lixo: 0.822143 s para carregar a funcao biblioteca/header
//Malloc/free....: 0.501734 s para carregar a funcao que aloca e libera a memoria
